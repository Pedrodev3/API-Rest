package br.com.fiap.resource;

import java.sql.SQLException;
import java.util.ArrayList;

import javax.ws.rs.Consumes;
import javax.ws.rs.DELETE;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.PUT;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.UriBuilder;
import javax.ws.rs.core.UriInfo;

import br.com.fiap.bo.RegistroRecrutadorBO;
import br.com.fiap.to.RegistroRecrutadorTO;

@Path("/registroRecrutador")
public class RegistroRecrutadorResource {
	
	private RegistroRecrutadorBO rrb;
	
	
	// Cadastrar / Insert / Post (Postman)
		@POST
		@Consumes(MediaType.APPLICATION_JSON)
		public Response cadastrar(RegistroRecrutadorTO rrt, @Context UriInfo uriInfo) throws SQLException,
        InstantiationException, IllegalAccessException, ClassNotFoundException {
			
			// Abertura
			RegistroRecrutadorDAO connect = new Connect();
			
			// Cadastrando um novo recrutador
			rrb.cadastrar(rrt);
			
			// Fechamento
			connect.closeConnection();
			
			// Construindo o PATH
			UriBuilder builder = uriInfo.getAbsolutePathBuilder();

			// Parseando o código e concatenando com o PATH
			builder.path(Integer.toString(rrt.getIdRegistroGeral()));

			// Retornando o Status Code do HTTP através do Builder
			return Response.created(builder.build()).build();
		}
	
	
	// Atualizar / Update / Put (Postman)
	@PUT
	@Path("/{id}")
	@Consumes(MediaType.APPLICATION_JSON)
	public Response atualizar(RegistroRecrutadorTO rrt, @PathParam("id") int id) {
		// Setar o ID do registro do recrutador
		rrt.setIdRegistroGeral(id);
		
		// Atualizando o objeto (registro do recrutador)
		rrb.atualizar(rrt);
		
		// Retornando o Status 200
		return Response.ok().build();
	}
	
	
	// Excluir / Delete / Delete (Postman)
	@DELETE
	@Path("/{id}")
	public void excluir(@PathParam("id") int id) {
		rrb.remover(id);
	}
	
	
	// Buscar / Select / GET-BY_ID (Postman)
	@GET
	@Path("/{id}")
	@Produces(MediaType.APPLICATION_JSON)
	public ArrayList<RegistroRecrutadorTO> buscar(@PathParam("id") int id) {
		return rrb.listar(id);
	}
	
	
	// BuscarTodos / SelectAll / GET-ALL (Postman)
	@GET
	@Produces(MediaType.APPLICATION_JSON)
	public ArrayList<RegistroRecrutadorTO> buscarTodos() {
		return rrb.listarTodos();
	}
	
}
